@using System.Globalization
<MudCard Elevation="8" Outlined Class="@Class" Style="min-width: 350px;">
    <MudCardContent>
        <MudGrid Justify="Justify.Center" Class="mb-3">
            <MudChip Color="Color.Info" Style="justify-self: center;" Size="Size.Large"
                     Icon="@Icons.Material.Filled.LocationCity">
                <MudText Align="Align.Center" Typo="Typo.h4">
                    @PlannerManager.StageList.First(x => x.id == Session.StageId).Name
                </MudText>
            </MudChip>
        </MudGrid>
        <MudCard Outlined="true" Class="pa-3">
            <MudText GutterBottom="true" Typo="Typo.h6" Align="Align.Center">
                DJ: @PlannerManager.DjList.First(x => x.id == Session.DJId).Name
            </MudText>
            <MudText Typo="Typo.h6" Align="Align.Center">
                Von: @Session.StartTime.ToString("dd.MM") (@Session.StartTime.ToString("dddd", new CultureInfo("de")))
            </MudText>
            <MudText Typo="Typo.h6" Align="Align.Center">
                Bis: @Session.EndTime.ToString("dd.MM") (@Session.EndTime.ToString("dddd", new CultureInfo("de")))
            </MudText>
        </MudCard>
    </MudCardContent>
    @if (!IsReadonly)
    {
        <MudCardActions>
            @if (PlannerManager.AddedSessions.Select(x => x.id).Contains(Session.id))
            {
                <MudButton Variant="Variant.Outlined" Color="Color.Error"
                           OnClick="@(() => RemoveUserSession(Session))"
                           StartIcon="@Icons.Material.Outlined.Remove">
                    Remove!
                </MudButton>
            }
            else
            {
                <MudButton Variant="Variant.Outlined" Color="Color.Info"
                           OnClick="@(() => AddUserSession(Session))"
                           StartIcon="@Icons.Material.Outlined.Add">
                    Add!
                </MudButton>
            }
        </MudCardActions>
    }
</MudCard>